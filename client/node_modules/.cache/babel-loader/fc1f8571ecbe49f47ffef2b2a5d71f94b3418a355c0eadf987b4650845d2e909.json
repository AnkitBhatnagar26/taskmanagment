{"ast":null,"code":"var _jsxFileName = \"/Users/ankit/Desktop/Projects/pesto/task-management-app/src/components/TaskManager.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TaskForm from './TaskForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = ({\n  tasks,\n  onUpdateStatus,\n  onDeleteTask\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: task.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", task.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onUpdateStatus(task.id),\n          children: \"Update Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onDeleteTask(task.id),\n          children: \"Delete Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 21\n      }, this)\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n_c = TaskList;\nconst TaskFilter = ({\n  onChangeFilter\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    onChange: e => onChangeFilter(e.target.value),\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"all\",\n      children: \"All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"To Do\",\n      children: \"To Do\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"In Progress\",\n      children: \"In Progress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"Done\",\n      children: \"Done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_c2 = TaskFilter;\nconst TaskManager = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [filter, setFilter] = useState('all');\n  const handleAddTask = newTask => {\n    setTasks([...tasks, newTask]);\n  };\n  const handleUpdateStatus = taskId => {\n    const updatedTasks = tasks.map(task => task.id === taskId ? {\n      ...task,\n      status: task.status === 'To Do' ? 'In Progress' : 'Done'\n    } : task);\n    setTasks(updatedTasks);\n  };\n  const handleDeleteTask = taskId => {\n    const updatedTasks = tasks.filter(task => task.id !== taskId);\n    setTasks(updatedTasks);\n  };\n  const filteredTasks = filter === 'all' ? tasks : tasks.filter(task => task.status === filter);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Management App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      onSubmit: handleAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskFilter, {\n      onChangeFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: filteredTasks,\n      onUpdateStatus: handleUpdateStatus,\n      onDeleteTask: handleDeleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskManager, \"QPzHS6yxgTMd+mLLtAh4oSYXmow=\");\n_c3 = TaskManager;\nexport default TaskManager;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"TaskList\");\n$RefreshReg$(_c2, \"TaskFilter\");\n$RefreshReg$(_c3, \"TaskManager\");","map":{"version":3,"names":["React","useState","TaskForm","jsxDEV","_jsxDEV","TaskList","tasks","onUpdateStatus","onDeleteTask","children","map","task","title","fileName","_jsxFileName","lineNumber","columnNumber","description","status","onClick","id","_c","TaskFilter","onChangeFilter","onChange","e","target","value","_c2","TaskManager","_s","setTasks","filter","setFilter","handleAddTask","newTask","handleUpdateStatus","taskId","updatedTasks","handleDeleteTask","filteredTasks","onSubmit","_c3","$RefreshReg$"],"sources":["/Users/ankit/Desktop/Projects/pesto/task-management-app/src/components/TaskManager.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Task } from '../utils/interface';\nimport TaskForm from './TaskForm';\n\nconst TaskList: React.FC<{\n    tasks: Task[];\n    onUpdateStatus: (id: number) => void;\n    onDeleteTask: (id: number) => void;\n}> = ({ tasks, onUpdateStatus, onDeleteTask }) => {\n    return (\n        <ul>\n            {tasks.map((task) => (\n                <li key={task.id}>\n                    <div>\n                        <strong>{task.title}</strong>\n                        <p>{task.description}</p>\n                        <p>Status: {task.status}</p>\n                        <button onClick={() => onUpdateStatus(task.id)}>Update Status</button>\n                        <button onClick={() => onDeleteTask(task.id)}>Delete Task</button>\n                    </div>\n                </li>\n            ))}\n        </ul>\n    );\n};\n\nconst TaskFilter: React.FC<{ onChangeFilter: (filter: 'all' | 'To Do' | 'In Progress' | 'Done') => void }> = ({\n    onChangeFilter,\n}) => {\n    return (\n        <select onChange={(e) => onChangeFilter(e.target.value as 'all' | 'To Do' | 'In Progress' | 'Done')}>\n            <option value=\"all\">All</option>\n            <option value=\"To Do\">To Do</option>\n            <option value=\"In Progress\">In Progress</option>\n            <option value=\"Done\">Done</option>\n        </select>\n    );\n};\n\nconst TaskManager: React.FC = () => {\n    const [tasks, setTasks] = useState<Task[]>([]);\n    const [filter, setFilter] = useState<'all' | 'To Do' | 'In Progress' | 'Done'>('all');\n\n    const handleAddTask = (newTask: Task) => {\n        setTasks([...tasks, newTask]);\n    };\n\n    const handleUpdateStatus = (taskId: number) => {\n        const updatedTasks = tasks.map((task) =>\n            task.id === taskId ? { ...task, status: task.status === 'To Do' ? 'In Progress' : 'Done' } : task\n        ) as Task[];\n        setTasks(updatedTasks);\n    };\n\n    const handleDeleteTask = (taskId: number) => {\n        const updatedTasks = tasks.filter((task) => task.id !== taskId);\n        setTasks(updatedTasks);\n    };\n\n    const filteredTasks = filter === 'all' ? tasks : tasks.filter((task) => task.status === filter);\n\n    return (\n        <div>\n            <h1>Task Management App</h1>\n            <TaskForm onSubmit={handleAddTask} />\n            <TaskFilter onChangeFilter={setFilter} />\n            <TaskList tasks={filteredTasks} onUpdateStatus={handleUpdateStatus} onDeleteTask={handleDeleteTask} />\n        </div>\n    );\n};\n\nexport default TaskManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/ankit/Desktop/Projects/pesto/task-management-app/src/components/TaskManager.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TaskForm from './TaskForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskFilter = ({\n  onChangeFilter\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    onChange: e => onChangeFilter(e.target.value),\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"all\",\n      children: \"All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"To Do\",\n      children: \"To Do\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"In Progress\",\n      children: \"In Progress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"Done\",\n      children: \"Done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n_c = TaskFilter;\nconst TaskManager = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [filter, setFilter] = useState('all');\n  const handleAddTask = newTask => {\n    setTasks([...tasks, newTask]);\n  };\n  const handleUpdateStatus = taskId => {\n    const updatedTasks = tasks.map(task => task.id === taskId ? {\n      ...task,\n      status: task.status === 'To Do' ? 'In Progress' : 'Done'\n    } : task);\n    setTasks(updatedTasks);\n  };\n  const handleDeleteTask = taskId => {\n    const updatedTasks = tasks.filter(task => task.id !== taskId);\n    setTasks(updatedTasks);\n  };\n  const filteredTasks = filter === 'all' ? tasks : tasks.filter(task => task.status === filter);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Management App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      onSubmit: handleAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskFilter, {\n      onChangeFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: filteredTasks,\n      onUpdateStatus: handleUpdateStatus,\n      onDeleteTask: handleDeleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskManager, \"QPzHS6yxgTMd+mLLtAh4oSYXmow=\");\n_c2 = TaskManager;\nexport default TaskManager;\nvar _c, _c2;\n$RefreshReg$(_c, \"TaskFilter\");\n$RefreshReg$(_c2, \"TaskManager\");","map":{"version":3,"names":["React","useState","TaskForm","jsxDEV","_jsxDEV","TaskFilter","onChangeFilter","onChange","e","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","TaskManager","_s","tasks","setTasks","filter","setFilter","handleAddTask","newTask","handleUpdateStatus","taskId","updatedTasks","map","task","id","status","handleDeleteTask","filteredTasks","onSubmit","TaskList","onUpdateStatus","onDeleteTask","_c2","$RefreshReg$"],"sources":["/Users/ankit/Desktop/Projects/pesto/task-management-app/src/components/TaskManager.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Task } from '../utils/interface';\nimport TaskForm from './TaskForm';\n\n\n\nconst TaskFilter: React.FC<{ onChangeFilter: (filter: 'all' | 'To Do' | 'In Progress' | 'Done') => void }> = ({\n    onChangeFilter,\n}) => {\n    return (\n        <select onChange={(e) => onChangeFilter(e.target.value as 'all' | 'To Do' | 'In Progress' | 'Done')}>\n            <option value=\"all\">All</option>\n            <option value=\"To Do\">To Do</option>\n            <option value=\"In Progress\">In Progress</option>\n            <option value=\"Done\">Done</option>\n        </select>\n    );\n};\n\nconst TaskManager: React.FC = () => {\n    const [tasks, setTasks] = useState<Task[]>([]);\n    const [filter, setFilter] = useState<'all' | 'To Do' | 'In Progress' | 'Done'>('all');\n\n    const handleAddTask = (newTask: Task) => {\n        setTasks([...tasks, newTask]);\n    };\n\n    const handleUpdateStatus = (taskId: number) => {\n        const updatedTasks = tasks.map((task) =>\n            task.id === taskId ? { ...task, status: task.status === 'To Do' ? 'In Progress' : 'Done' } : task\n        ) as Task[];\n        setTasks(updatedTasks);\n    };\n\n    const handleDeleteTask = (taskId: number) => {\n        const updatedTasks = tasks.filter((task) => task.id !== taskId);\n        setTasks(updatedTasks);\n    };\n\n    const filteredTasks = filter === 'all' ? tasks : tasks.filter((task) => task.status === filter);\n\n    return (\n        <div>\n            <h1>Task Management App</h1>\n            <TaskForm onSubmit={handleAddTask} />\n            <TaskFilter onChangeFilter={setFilter} />\n            <TaskList tasks={filteredTasks} onUpdateStatus={handleUpdateStatus} onDeleteTask={handleDeleteTask} />\n        </div>\n    );\n};\n\nexport default TaskManager;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIlC,MAAMC,UAAoG,GAAGA,CAAC;EAC1GC;AACJ,CAAC,KAAK;EACF,oBACIF,OAAA;IAAQG,QAAQ,EAAGC,CAAC,IAAKF,cAAc,CAACE,CAAC,CAACC,MAAM,CAACC,KAAiD,CAAE;IAAAC,QAAA,gBAChGP,OAAA;MAAQM,KAAK,EAAC,KAAK;MAAAC,QAAA,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAChCX,OAAA;MAAQM,KAAK,EAAC,OAAO;MAAAC,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACpCX,OAAA;MAAQM,KAAK,EAAC,aAAa;MAAAC,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAChDX,OAAA;MAAQM,KAAK,EAAC,MAAM;MAAAC,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9B,CAAC;AAEjB,CAAC;AAACC,EAAA,GAXIX,UAAoG;AAa1G,MAAMY,WAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACoB,MAAM,EAAEC,SAAS,CAAC,GAAGrB,QAAQ,CAA2C,KAAK,CAAC;EAErF,MAAMsB,aAAa,GAAIC,OAAa,IAAK;IACrCJ,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEK,OAAO,CAAC,CAAC;EACjC,CAAC;EAED,MAAMC,kBAAkB,GAAIC,MAAc,IAAK;IAC3C,MAAMC,YAAY,GAAGR,KAAK,CAACS,GAAG,CAAEC,IAAI,IAChCA,IAAI,CAACC,EAAE,KAAKJ,MAAM,GAAG;MAAE,GAAGG,IAAI;MAAEE,MAAM,EAAEF,IAAI,CAACE,MAAM,KAAK,OAAO,GAAG,aAAa,GAAG;IAAO,CAAC,GAAGF,IACjG,CAAW;IACXT,QAAQ,CAACO,YAAY,CAAC;EAC1B,CAAC;EAED,MAAMK,gBAAgB,GAAIN,MAAc,IAAK;IACzC,MAAMC,YAAY,GAAGR,KAAK,CAACE,MAAM,CAAEQ,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKJ,MAAM,CAAC;IAC/DN,QAAQ,CAACO,YAAY,CAAC;EAC1B,CAAC;EAED,MAAMM,aAAa,GAAGZ,MAAM,KAAK,KAAK,GAAGF,KAAK,GAAGA,KAAK,CAACE,MAAM,CAAEQ,IAAI,IAAKA,IAAI,CAACE,MAAM,KAAKV,MAAM,CAAC;EAE/F,oBACIjB,OAAA;IAAAO,QAAA,gBACIP,OAAA;MAAAO,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BX,OAAA,CAACF,QAAQ;MAACgC,QAAQ,EAAEX;IAAc;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrCX,OAAA,CAACC,UAAU;MAACC,cAAc,EAAEgB;IAAU;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzCX,OAAA,CAAC+B,QAAQ;MAAChB,KAAK,EAAEc,aAAc;MAACG,cAAc,EAAEX,kBAAmB;MAACY,YAAY,EAAEL;IAAiB;MAAApB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrG,CAAC;AAEd,CAAC;AAACG,EAAA,CA9BID,WAAqB;AAAAqB,GAAA,GAArBrB,WAAqB;AAgC3B,eAAeA,WAAW;AAAC,IAAAD,EAAA,EAAAsB,GAAA;AAAAC,YAAA,CAAAvB,EAAA;AAAAuB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/ankit/Desktop/Projects/pesto/task-management-app/src/components/TaskManager.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TaskForm from './TaskForm';\nimport TaskList from './TaskList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskManager = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [filter, setFilter] = useState('all');\n  const handleAddTask = newTask => {\n    setTasks([...tasks, newTask]);\n  };\n  const handleUpdateStatus = taskId => {\n    const updatedTasks = tasks.map(task => task.id === taskId ? {\n      ...task,\n      status: task.status === 'To Do' ? 'In Progress' : 'Done'\n    } : task);\n    setTasks(updatedTasks);\n  };\n  const handleDeleteTask = taskId => {\n    const updatedTasks = tasks.filter(task => task.id !== taskId);\n    setTasks(updatedTasks);\n  };\n  const filteredTasks = filter === 'all' ? tasks : tasks.filter(task => task.status === filter);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/5 bg-gray-800 text-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4\",\n        children: /*#__PURE__*/_jsxDEV(SidebarItem, {\n          onClick: () => setShowTaskForm(true),\n          children: \"Create Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4\",\n        children: [/*#__PURE__*/_jsxDEV(SidebarItem, {\n          onClick: () => setFilter('all'),\n          children: \"All Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SidebarItem, {\n          onClick: () => setFilter('To Do'),\n          children: \"To Do\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SidebarItem, {\n          onClick: () => setFilter('In Progress'),\n          children: \"In Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SidebarItem, {\n          onClick: () => setFilter('Done'),\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-4/5 p-4\",\n      children: showTaskForm ? /*#__PURE__*/_jsxDEV(TaskForm, {\n        onSubmit: handleAddTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: filteredTasks,\n        onUpdateStatus: handleUpdateStatus,\n        onDeleteTask: handleDeleteTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskManager, \"QPzHS6yxgTMd+mLLtAh4oSYXmow=\");\n_c = TaskManager;\nexport default TaskManager;\nvar _c;\n$RefreshReg$(_c, \"TaskManager\");","map":{"version":3,"names":["React","useState","TaskForm","TaskList","jsxDEV","_jsxDEV","TaskManager","_s","tasks","setTasks","filter","setFilter","handleAddTask","newTask","handleUpdateStatus","taskId","updatedTasks","map","task","id","status","handleDeleteTask","filteredTasks","className","children","SidebarItem","onClick","setShowTaskForm","fileName","_jsxFileName","lineNumber","columnNumber","showTaskForm","onSubmit","onUpdateStatus","onDeleteTask","_c","$RefreshReg$"],"sources":["/Users/ankit/Desktop/Projects/pesto/task-management-app/src/components/TaskManager.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Task } from '../utils/interface';\nimport TaskForm from './TaskForm';\nimport TaskList from './TaskList';\nimport TaskFilter from './TaskFilter';\n\n\nconst TaskManager: React.FC = () => {\n    const [tasks, setTasks] = useState<Task[]>([]);\n    const [filter, setFilter] = useState<'all' | 'To Do' | 'In Progress' | 'Done'>('all');\n\n    const handleAddTask = (newTask: Task) => {\n        setTasks([...tasks, newTask]);\n    };\n\n    const handleUpdateStatus = (taskId: number) => {\n        const updatedTasks = tasks.map((task) =>\n            task.id === taskId ? { ...task, status: task.status === 'To Do' ? 'In Progress' : 'Done' } : task\n        ) as Task[];\n        setTasks(updatedTasks);\n    };\n\n    const handleDeleteTask = (taskId: number) => {\n        const updatedTasks = tasks.filter((task) => task.id !== taskId);\n        setTasks(updatedTasks);\n    };\n\n    const filteredTasks = filter === 'all' ? tasks : tasks.filter((task) => task.status === filter);\n\n    return (\n        <div className=\"flex\">\n            <div className=\"w-1/5 bg-gray-800 text-white\">\n                <div className=\"p-4\">\n                    <SidebarItem onClick={() => setShowTaskForm(true)}>Create Task</SidebarItem>\n                </div>\n                <div className=\"p-4\">\n                    <SidebarItem onClick={() => setFilter('all')}>All Tasks</SidebarItem>\n                    <SidebarItem onClick={() => setFilter('To Do')}>To Do</SidebarItem>\n                    <SidebarItem onClick={() => setFilter('In Progress')}>In Progress</SidebarItem>\n                    <SidebarItem onClick={() => setFilter('Done')}>Done</SidebarItem>\n                </div>\n            </div>\n            <div className=\"w-4/5 p-4\">\n                {showTaskForm ? (\n                    <TaskForm onSubmit={handleAddTask} />\n                ) : (\n                    <TaskList tasks={filteredTasks} onUpdateStatus={handleUpdateStatus} onDeleteTask={handleDeleteTask} />\n                )}\n            </div>\n        </div>\n\n    );\n};\n\nexport default TaskManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}